import type { MaskitoOptions } from '@maskito/core';
import * as i0 from "@angular/core";
import * as i1 from "./maskito.directive";
import * as i2 from "./maskito.pipe";
/**
 * @deprecated Just use `MaskitoDirective`, `MaskitoCVA` no longer needed.
 */
export declare class MaskitoCVA {
    maskito?: MaskitoOptions | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<MaskitoCVA, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MaskitoCVA, "input[maskito], textarea[maskito]", never, { "maskito": "maskito"; }, {}, never, never, true, never>;
}
/**
 * @deprecated Use standalone `MaskitoDirective` and `MaskitoPipe` instead.
 * Learn more: https://maskito.dev/frameworks/angular
 * ___
 * TODO: Delete it in v3.0 (after Taiga UI 4.0 will be released and bumped in this repository).
 * Taiga UI (3.x.x) uses Maskito (1.x.x) <=> Maskito (2.x.x) uses Taiga UI (3.x.x) to build demo application.
 * Also, NPM workspaces create symlinks for `@maskito/*` inside `node_modules`.
 * All this together don't allow us to build Maskito's demo without this legacy module.
 * ___
 * > nx build demo
 * ```
 * ./node_modules/@taiga-ui/kit/fesm2015/taiga-ui-kit-components-input-date.js:465:29-42 -
 * Error: export 'MaskitoModule' (imported as 'MaskitoModule') was not found in '@maskito/angular'
 * (possible exports: MaskitoCVA, MaskitoDirective, MaskitoPipe)
 * ```
 */
export declare class MaskitoModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<MaskitoModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<MaskitoModule, never, [typeof i1.MaskitoDirective, typeof MaskitoCVA, typeof i2.MaskitoPipe], [typeof i1.MaskitoDirective, typeof MaskitoCVA, typeof i2.MaskitoPipe]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<MaskitoModule>;
}
